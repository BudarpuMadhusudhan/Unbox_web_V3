function cov_zg3uikrnf(){var path="C:\\Users\\User\\Desktop\\Unbox\\src\\string.js";var hash="faa41a64e17d5887f118ab7356e5020a09cbcaae";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Desktop\\Unbox\\src\\string.js",statementMap:{"0":{start:{line:1,column:8},end:{line:1,column:49}},"1":{start:{line:4,column:0},end:{line:4,column:10}},"2":{start:{line:5,column:0},end:{line:5,column:24}},"3":{start:{line:10,column:0},end:{line:10,column:28}},"4":{start:{line:11,column:0},end:{line:11,column:28}},"5":{start:{line:15,column:0},end:{line:15,column:27}},"6":{start:{line:18,column:0},end:{line:18,column:33}},"7":{start:{line:19,column:0},end:{line:19,column:17}},"8":{start:{line:23,column:0},end:{line:23,column:31}},"9":{start:{line:24,column:0},end:{line:24,column:31}},"10":{start:{line:28,column:0},end:{line:28,column:34}},"11":{start:{line:32,column:0},end:{line:32,column:30}},"12":{start:{line:36,column:0},end:{line:36,column:34}},"13":{start:{line:40,column:0},end:{line:40,column:34}},"14":{start:{line:41,column:0},end:{line:41,column:34}},"15":{start:{line:45,column:0},end:{line:45,column:27}},"16":{start:{line:49,column:0},end:{line:49,column:24}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"faa41a64e17d5887f118ab7356e5020a09cbcaae"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_zg3uikrnf=function(){return actualCoverage;};}return actualCoverage;}cov_zg3uikrnf();var str=(cov_zg3uikrnf().s[0]++," These are Built in methods of strings ");//length function is used to get length of the string
cov_zg3uikrnf().s[1]++;str.length;cov_zg3uikrnf().s[2]++;console.log(str.length);//split function split string based on seperator specified
//str.split(separator)
cov_zg3uikrnf().s[3]++;console.log(str.split(" "));cov_zg3uikrnf().s[4]++;console.log(str.split("a"));// str.charAt(position) function gives the position of the string
cov_zg3uikrnf().s[5]++;console.log(str.charAt(7));//str.concat() function appends a string to an existing string
cov_zg3uikrnf().s[6]++;console.log(str.concat("Hello"));cov_zg3uikrnf().s[7]++;console.log(str);//str.endsWith checks that specified ending char and gives result as true or false
cov_zg3uikrnf().s[8]++;console.log(str.endsWith("e"));cov_zg3uikrnf().s[9]++;console.log(str.endsWith(" "));//str.includes(search_String) checks particular sring and returns true or false
cov_zg3uikrnf().s[10]++;console.log(str.includes("have"));//str.indexOf(search_String) will get the position of the first matching string from left to right
cov_zg3uikrnf().s[11]++;console.log(str.indexOf("s"));//str.lastIndexOf(search_String) will get the position of the first matching string from right to left
cov_zg3uikrnf().s[12]++;console.log(str.lastIndexOf("e"));//str.replace(search_String) replaces the given string with searched string
cov_zg3uikrnf().s[13]++;console.log(str.replace("","hi"));cov_zg3uikrnf().s[14]++;console.log(str.replace("s","a"));//Note it will replace only first matching string
// str.repeat(Number) it will repeat the same string for specified number of times
cov_zg3uikrnf().s[15]++;console.log(str.repeat(3));//str.trim() it wil remove leading and preceding spaces
cov_zg3uikrnf().s[16]++;console.log(str.trim());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdHIiLCJsZW5ndGgiLCJjb25zb2xlIiwibG9nIiwic3BsaXQiLCJjaGFyQXQiLCJjb25jYXQiLCJlbmRzV2l0aCIsImluY2x1ZGVzIiwiaW5kZXhPZiIsImxhc3RJbmRleE9mIiwicmVwbGFjZSIsInJlcGVhdCIsInRyaW0iXSwic291cmNlcyI6WyJzdHJpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHN0cj1cIiBUaGVzZSBhcmUgQnVpbHQgaW4gbWV0aG9kcyBvZiBzdHJpbmdzIFwiXHJcblxyXG4vL2xlbmd0aCBmdW5jdGlvbiBpcyB1c2VkIHRvIGdldCBsZW5ndGggb2YgdGhlIHN0cmluZ1xyXG5zdHIubGVuZ3RoXHJcbmNvbnNvbGUubG9nKHN0ci5sZW5ndGgpO1xyXG5cclxuXHJcbi8vc3BsaXQgZnVuY3Rpb24gc3BsaXQgc3RyaW5nIGJhc2VkIG9uIHNlcGVyYXRvciBzcGVjaWZpZWRcclxuLy9zdHIuc3BsaXQoc2VwYXJhdG9yKVxyXG5jb25zb2xlLmxvZyhzdHIuc3BsaXQoXCIgXCIpKTtcclxuY29uc29sZS5sb2coc3RyLnNwbGl0KFwiYVwiKSk7XHJcblxyXG5cclxuLy8gc3RyLmNoYXJBdChwb3NpdGlvbikgZnVuY3Rpb24gZ2l2ZXMgdGhlIHBvc2l0aW9uIG9mIHRoZSBzdHJpbmdcclxuY29uc29sZS5sb2coc3RyLmNoYXJBdCg3KSk7XHJcblxyXG4vL3N0ci5jb25jYXQoKSBmdW5jdGlvbiBhcHBlbmRzIGEgc3RyaW5nIHRvIGFuIGV4aXN0aW5nIHN0cmluZ1xyXG5jb25zb2xlLmxvZyhzdHIuY29uY2F0KFwiSGVsbG9cIikpO1xyXG5jb25zb2xlLmxvZyhzdHIpO1xyXG5cclxuXHJcbi8vc3RyLmVuZHNXaXRoIGNoZWNrcyB0aGF0IHNwZWNpZmllZCBlbmRpbmcgY2hhciBhbmQgZ2l2ZXMgcmVzdWx0IGFzIHRydWUgb3IgZmFsc2VcclxuY29uc29sZS5sb2coc3RyLmVuZHNXaXRoKFwiZVwiKSk7XHJcbmNvbnNvbGUubG9nKHN0ci5lbmRzV2l0aChcIiBcIikpO1xyXG5cclxuXHJcbi8vc3RyLmluY2x1ZGVzKHNlYXJjaF9TdHJpbmcpIGNoZWNrcyBwYXJ0aWN1bGFyIHNyaW5nIGFuZCByZXR1cm5zIHRydWUgb3IgZmFsc2VcclxuY29uc29sZS5sb2coc3RyLmluY2x1ZGVzKFwiaGF2ZVwiKSk7XHJcblxyXG5cclxuLy9zdHIuaW5kZXhPZihzZWFyY2hfU3RyaW5nKSB3aWxsIGdldCB0aGUgcG9zaXRpb24gb2YgdGhlIGZpcnN0IG1hdGNoaW5nIHN0cmluZyBmcm9tIGxlZnQgdG8gcmlnaHRcclxuY29uc29sZS5sb2coc3RyLmluZGV4T2YoXCJzXCIpKTtcclxuXHJcblxyXG4vL3N0ci5sYXN0SW5kZXhPZihzZWFyY2hfU3RyaW5nKSB3aWxsIGdldCB0aGUgcG9zaXRpb24gb2YgdGhlIGZpcnN0IG1hdGNoaW5nIHN0cmluZyBmcm9tIHJpZ2h0IHRvIGxlZnRcclxuY29uc29sZS5sb2coc3RyLmxhc3RJbmRleE9mKFwiZVwiKSk7XHJcblxyXG5cclxuLy9zdHIucmVwbGFjZShzZWFyY2hfU3RyaW5nKSByZXBsYWNlcyB0aGUgZ2l2ZW4gc3RyaW5nIHdpdGggc2VhcmNoZWQgc3RyaW5nXHJcbmNvbnNvbGUubG9nKHN0ci5yZXBsYWNlKFwiXCIsXCJoaVwiKSk7XHJcbmNvbnNvbGUubG9nKHN0ci5yZXBsYWNlKFwic1wiLFwiYVwiKSk7XHJcbi8vTm90ZSBpdCB3aWxsIHJlcGxhY2Ugb25seSBmaXJzdCBtYXRjaGluZyBzdHJpbmdcclxuXHJcbi8vIHN0ci5yZXBlYXQoTnVtYmVyKSBpdCB3aWxsIHJlcGVhdCB0aGUgc2FtZSBzdHJpbmcgZm9yIHNwZWNpZmllZCBudW1iZXIgb2YgdGltZXNcclxuY29uc29sZS5sb2coc3RyLnJlcGVhdCgzKSk7XHJcblxyXG5cclxuLy9zdHIudHJpbSgpIGl0IHdpbCByZW1vdmUgbGVhZGluZyBhbmQgcHJlY2VkaW5nIHNwYWNlc1xyXG5jb25zb2xlLmxvZyhzdHIudHJpbSgpKTtcclxuXHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiZ21EQWVZO0FBQUEseUZBZlosR0FBSUEsSUFBRyx5QkFBQyx5Q0FBeUMsRUFFakQ7QUFBQSx1QkFDQUEsR0FBRyxDQUFDQyxNQUFNLHdCQUNWQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDQyxNQUFNLENBQUMsQ0FHdkI7QUFDQTtBQUFBLHVCQUNBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyx1QkFDNUJGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUNJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUczQjtBQUFBLHVCQUNBRixPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FFMUI7QUFBQSx1QkFDQUgsT0FBTyxDQUFDQyxHQUFHLENBQUNILEdBQUcsQ0FBQ00sTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsdUJBQ2pDSixPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDLENBR2hCO0FBQUEsdUJBQ0FFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUNPLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLHVCQUMvQkwsT0FBTyxDQUFDQyxHQUFHLENBQUNILEdBQUcsQ0FBQ08sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBRzlCO0FBQUEsd0JBQ0FMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUNRLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUdqQztBQUFBLHdCQUNBTixPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDUyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FHN0I7QUFBQSx3QkFDQVAsT0FBTyxDQUFDQyxHQUFHLENBQUNILEdBQUcsQ0FBQ1UsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBR2pDO0FBQUEsd0JBQ0FSLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUNXLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyx3QkFDbENULE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxHQUFHLENBQUNXLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDakM7QUFFQTtBQUFBLHdCQUNBVCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDWSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FHMUI7QUFBQSx3QkFDQVYsT0FBTyxDQUFDQyxHQUFHLENBQUNILEdBQUcsQ0FBQ2EsSUFBSSxFQUFFLENBQUMifQ==